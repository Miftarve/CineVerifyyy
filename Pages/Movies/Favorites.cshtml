@page
@model CineVerify.Pages.Movies.FavoritesModel
@{
    ViewData["Title"] = "I Miei Preferiti";
}

<!-- Hero section con effetto neomorfico e particelle animate -->
<div class="favorites-hero">
    <div class="hero-particles"></div>
    <div class="hero-shapes">
        <div class="shape shape-1"></div>
        <div class="shape shape-2"></div>
        <div class="shape shape-3"></div>
    </div>
    <div class="container position-relative">
        <div class="favorites-header">
            <div class="header-content" data-aos="fade-up" data-aos-delay="100">
                <h1><i class="bi bi-heart-fill text-danger me-2 pulse-icon"></i>I Miei Film Preferiti</h1>
                <p class="lead">La tua collezione personale di film che ti sono piaciuti di più</p>
            </div>
        </div>

        <!-- Statistiche preferiti con effetto 3D e hover interattivo -->
        <div class="favorites-stats" data-aos="fade-up" data-aos-delay="200">
            <div class="stat-item">
                <div class="stat-icon"><i class="bi bi-film"></i></div>
                <div class="stat-content">
                    <div class="stat-value counter">@Model.Favorites.Count()</div>
                    <div class="stat-label">Film salvati</div>
                </div>
                <div class="stat-backdrop"></div>
            </div>

            @if (Model.Favorites.Any())
            {
                <div class="stat-item">
                    <div class="stat-icon"><i class="bi bi-star"></i></div>
                    <div class="stat-content">
                        <div class="stat-value counter">@Model.Favorites.Max(f => f.Movie.Rating).ToString("0.0")</div>
                        <div class="stat-label">Voto più alto</div>
                    </div>
                    <div class="stat-backdrop"></div>
                </div>

                <div class="stat-item">
                    <div class="stat-icon"><i class="bi bi-bar-chart"></i></div>
                    <div class="stat-content">
                        <div class="stat-value counter">@Model.Favorites.Average(f => f.Movie.Rating).ToString("0.0")</div>
                        <div class="stat-label">Media voti</div>
                    </div>
                    <div class="stat-backdrop"></div>
                </div>
            }
        </div>
    </div>
</div>

<div class="container mt-5">
    @if (Model.Favorites.Any())
    {
        <!-- Filtri e ricerca con design migliorato -->
        <div class="filters-container" data-aos="fade-up" data-aos-delay="100">
            <div class="filters-bar mb-4">
                <div class="view-toggle">
                    <button type="button" class="btn-view active" data-view="grid" title="Vista a griglia">
                        <i class="bi bi-grid-3x3-gap-fill"></i>
                    </button>
                    <button type="button" class="btn-view" data-view="list" title="Vista a lista">
                        <i class="bi bi-list-ul"></i>
                    </button>
                </div>

                <div class="search-favorites">
                    <div class="search-input-wrapper">
                        <i class="bi bi-search search-icon"></i>
                        <input type="text" class="form-control search-input" placeholder="Cerca tra i preferiti...">
                        <button class="btn-clear-search" style="display:none;"><i class="bi bi-x-circle"></i></button>
                    </div>
                </div>

                <div class="sort-dropdown">
                    <label for="sortSelect" class="sort-label">Ordina per:</label>
                    <select id="sortSelect" class="form-select sort-select">
                        <option value="date-desc">Aggiunti di recente</option>
                        <option value="rating-desc">Voto più alto</option>
                        <option value="title-asc">Titolo (A-Z)</option>
                        <option value="year-desc">Anno (più recenti)</option>
                    </select>
                </div>
            </div>
        </div>

        <!-- Indicatore risultati -->
        <div class="results-indicator" data-aos="fade-up" data-aos-delay="150">
            <span class="results-count">Showing <strong>@Model.Favorites.Count()</strong> films</span>
            <div class="active-filters"></div>
        </div>

        <!-- Visualizzazione a griglia (default) -->
        <div id="grid-view" class="view-mode">
            <div class="row row-cols-1 row-cols-sm-2 row-cols-md-3 row-cols-lg-4 row-cols-xl-5 g-4 mb-4">
                @foreach (var favorite in Model.Favorites)
                {
                    var movie = favorite.Movie;
                    <div class="col movie-item" data-aos="fade-up" data-aos-delay="@(50 * (Model.Favorites.IndexOf(favorite) % 10))">
                        <div class="movie-card">
                            <div class="movie-poster-wrapper">
                                <div class="movie-poster">
                                    <a asp-page="./Details" asp-route-id="@movie.Id" class="poster-link">
                                        @if (!string.IsNullOrEmpty(movie.PosterPath))
                                        {
                                            <img src="@movie.PosterPath" alt="@movie.Title" loading="lazy" />
                                        }
                                        else
                                        {
                                            <div class="no-poster">
                                                <i class="bi bi-film"></i>
                                                <span>Nessun poster</span>
                                            </div>
                                        }
                                    </a>

                                    <!-- Indicatore aggiunto di recente con badge migliorato -->
                                    @if ((DateTime.Now - favorite.DateAdded).TotalDays < 7)
                                    {
                                        <div class="recently-added" title="Aggiunto di recente">
                                            <i class="bi bi-clock-history"></i>
                                            <span class="recent-tooltip">Nuovo</span>
                                        </div>
                                    }

                                    <div class="movie-rating" title="Valutazione">
                                        <i class="bi bi-star-fill me-1"></i>
                                        <span>@movie.Rating.ToString("0.0")</span>
                                    </div>

                                    <div class="movie-actions">
                                        <form method="post" asp-page-handler="RemoveFavorite"
                                              onsubmit="return confirm('Rimuovere questo film dai preferiti?');">
                                            <input type="hidden" name="favoriteId" value="@favorite.Id" />
                                            <button type="submit" class="btn-remove-favorite" title="Rimuovi dai preferiti">
                                                <i class="bi bi-heart-fill"></i>
                                                <span class="btn-tooltip">Rimuovi</span>
                                            </button>
                                        </form>
                                    </div>

                                    <!-- Overlay con opzioni migliorate -->
                                    <div class="movie-overlay">
                                        <div class="overlay-options">
                                            <a asp-page="./Details" asp-route-id="@movie.Id" class="btn-movie-action btn-details">
                                                <i class="bi bi-info-circle me-1"></i>Dettagli
                                            </a>
                                            @if (!string.IsNullOrEmpty(movie.TrailerUrl))
                                            {
                                                <a href="@movie.TrailerUrl" target="_blank" class="btn-movie-action btn-trailer">
                                                    <i class="bi bi-play-circle me-1"></i>Trailer
                                                </a>
                                            }
                                        </div>

                                        @if (movie.Genres != null && movie.Genres.Length > 0)
                                        {
                                            <div class="movie-genres-overlay">
                                                @foreach (var genre in movie.Genres.Take(3))
                                                {
                                                    <span class="genre-badge">@genre</span>
                                                }
                                            </div>
                                        }
                                    </div>
                                </div>
                            </div>

                            <div class="movie-info">
                                <h5 class="movie-title">
                                    <a asp-page="./Details" asp-route-id="@movie.Id">@movie.Title</a>
                                </h5>
                                <div class="movie-meta">
                                    <div class="movie-year">
                                        <i class="bi bi-calendar3"></i>
                                        <span>@(movie.ReleaseDate?.Year.ToString() ?? "N/A")</span>
                                    </div>

                                    <div class="movie-badges">
                                        @if (movie.IsVerified)
                                        {
                                            <span class="verified-badge" title="Film verificato">
                                                <i class="bi bi-patch-check-fill"></i>
                                            </span>
                                        }

                                        <span class="date-added" title="Aggiunto il @favorite.DateAdded.ToString("dd/MM/yyyy")">
                                            <i class="bi bi-calendar-heart"></i>
                                        </span>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                }
            </div>
        </div>

        <!-- Visualizzazione a lista migliorata (nascosta inizialmente) -->
        <div id="list-view" class="view-mode" style="display:none;">
            <div class="list-movies">
                @foreach (var favorite in Model.Favorites)
                {
                    var movie = favorite.Movie;
                    <div class="list-movie-item" data-aos="fade-up" data-aos-delay="@(50 * (Model.Favorites.IndexOf(favorite) % 10))">
                        <div class="list-movie-poster">
                            @if (!string.IsNullOrEmpty(movie.PosterPath))
                            {
                                <img src="@movie.PosterPath" alt="@movie.Title" loading="lazy" />
                            }
                            else
                            {
                                <div class="no-poster-list">
                                    <i class="bi bi-film"></i>
                                </div>
                            }
                            
                            <!-- Badge per film recenti -->
                            @if ((DateTime.Now - favorite.DateAdded).TotalDays < 7)
                            {
                                <div class="list-badge-new">Nuovo</div>
                            }
                        </div>
                        <div class="list-movie-content">
                            <div class="list-movie-header">
                                <h5 class="list-movie-title">
                                    <a asp-page="./Details" asp-route-id="@movie.Id">@movie.Title</a>
                                    @if (movie.IsVerified)
                                    {
                                        <span class="list-verified-badge" title="Film verificato">
                                            <i class="bi bi-patch-check-fill"></i>
                                        </span>
                                    }
                                </h5>
                                <div class="list-movie-rating">
                                    <i class="bi bi-star-fill text-warning"></i>
                                    <span>@movie.Rating.ToString("0.0")</span>
                                </div>
                            </div>

                            <div class="list-movie-details">
                                <div class="list-movie-year">
                                    <i class="bi bi-calendar3"></i>
                                    <span>@(movie.ReleaseDate?.Year.ToString() ?? "N/A")</span>
                                </div>

                                @if (movie.Genres != null && movie.Genres.Length > 0)
                                {
                                    <div class="list-movie-genres">
                                        @foreach (var genre in movie.Genres.Take(4))
                                        {
                                            <span class="list-genre-badge">@genre</span>
                                        }
                                    </div>
                                }

                                <div class="list-movie-date">
                                    <i class="bi bi-calendar-heart"></i>
                                    <span>Aggiunto il @favorite.DateAdded.ToString("dd/MM/yyyy")</span>
                                </div>
                            </div>
                        </div>
                        <div class="list-movie-actions">
                            <a asp-page="./Details" asp-route-id="@movie.Id" class="btn-list-action details">
                                <i class="bi bi-info-circle"></i>
                                <span>Dettagli</span>
                            </a>

                            @if (!string.IsNullOrEmpty(movie.TrailerUrl))
                            {
                                <a href="@movie.TrailerUrl" target="_blank" class="btn-list-action trailer">
                                    <i class="bi bi-play-circle"></i>
                                    <span>Trailer</span>
                                </a>
                            }

                            <form method="post" asp-page-handler="RemoveFavorite"
                                  onsubmit="return confirm('Rimuovere questo film dai preferiti?');">
                                <input type="hidden" name="favoriteId" value="@favorite.Id" />
                                <button type="submit" class="btn-list-action remove">
                                    <i class="bi bi-heart-fill"></i>
                                    <span>Rimuovi</span>
                                </button>
                            </form>
                        </div>
                    </div>
                }
            </div>
        </div>

        <!-- Paginazione migliorata -->
        @if (Model.TotalPages > 1)
        {
            <div class="pagination-container mt-5" data-aos="fade-up" data-aos-delay="200">
                <nav aria-label="Navigazione pagine">
                    <ul class="pagination justify-content-center">
                        <li class="page-item @(Model.CurrentPage == 1 ? "disabled" : "")">
                            <a class="page-link" asp-page="./Favorites"
                               asp-route-p="@(Model.CurrentPage - 1)">
                                <i class="bi bi-chevron-left"></i>
                            </a>
                        </li>

                        @{
                            const int maxVisiblePages = 5;
                            int startPage = Math.Max(1, Model.CurrentPage - maxVisiblePages / 2);
                            int endPage = Math.Min(Model.TotalPages, startPage + maxVisiblePages - 1);

                            if (startPage > 1)
                            {
                                <li class="page-item">
                                    <a class="page-link" asp-page="./Favorites" asp-route-p="1">1</a>
                                </li>
                                if (startPage > 2)
                                {
                                    <li class="page-item disabled"><span class="page-link">...</span></li>
                                }
                            }

                            for (int i = startPage; i <= endPage; i++)
                            {
                                <li class="page-item @(i == Model.CurrentPage ? "active" : "")">
                                    <a class="page-link" asp-page="./Favorites"
                                       asp-route-p="@i">@i</a>
                                </li>
                            }

                            if (endPage < Model.TotalPages)
                            {
                                if (endPage < Model.TotalPages - 1)
                                {
                                    <li class="page-item disabled"><span class="page-link">...</span></li>
                                }
                                <li class="page-item">
                                    <a class="page-link" asp-page="./Favorites"
                                       asp-route-p="@Model.TotalPages">@Model.TotalPages</a>
                                </li>
                            }
                        }

                        <li class="page-item @(Model.CurrentPage == Model.TotalPages ? "disabled" : "")">
                            <a class="page-link" asp-page="./Favorites"
                               asp-route-p="@(Model.CurrentPage + 1)">
                                <i class="bi bi-chevron-right"></i>
                            </a>
                        </li>
                    </ul>
                </nav>
                <div class="page-info text-center">
                    Pagina <span class="current-page">@Model.CurrentPage</span> di <span class="total-pages">@Model.TotalPages</span>
                </div>
            </div>
        }
    }
    else
    {
        <!-- Stato vuoto migliorato con illustrazioni e animazioni -->
        <div class="empty-state" data-aos="fade-up">
            <div class="empty-icon-container">
                <div class="empty-icon">
                    <i class="bi bi-heart"></i>
                </div>
                <div class="empty-decoration">
                    <div class="decoration-item d1"></div>
                    <div class="decoration-item d2"></div>
                    <div class="decoration-item d3"></div>
                </div>
            </div>
            <h2>Non hai ancora film preferiti</h2>
            <p>Salva i film che ti piacciono per ritrovarli facilmente e tenerli sempre a portata di mano</p>

            <div class="empty-actions">
                <a asp-page="./Index" class="btn btn-primary btn-lg">
                    <i class="bi bi-film me-2"></i> Esplora il catalogo
                </a>
            </div>

            <div class="empty-tips mt-5">
                <h5>Come aggiungere film ai preferiti:</h5>
                <div class="tips-container">
                    <div class="tip-card" data-aos="fade-up" data-aos-delay="100">
                        <div class="tip-icon">
                            <i class="bi bi-search"></i>
                        </div>
                        <div class="tip-content">
                            <h6>Trova un film</h6>
                            <p>Cerca nel nostro catalogo o esplora le categorie disponibili</p>
                        </div>
                    </div>

                    <div class="tip-card" data-aos="fade-up" data-aos-delay="200">
                        <div class="tip-icon">
                            <i class="bi bi-heart"></i>
                        </div>
                        <div class="tip-content">
                            <h6>Clicca sul cuore</h6>
                            <p>Utilizza il pulsante del cuore nella pagina dei dettagli</p>
                        </div>
                    </div>

                    <div class="tip-card" data-aos="fade-up" data-aos-delay="300">
                        <div class="tip-icon">
                            <i class="bi bi-collection"></i>
                        </div>
                        <div class="tip-content">
                            <h6>Gestisci la collezione</h6>
                            <p>Tutti i film salvati appariranno in questa pagina</p>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    }
</div>

@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            // Animazioni per gli elementi con ritardo progressivo
            const movieItems = document.querySelectorAll('.movie-item, .list-movie-item');
            
            // Animazione valori statistiche
            const counters = document.querySelectorAll('.counter');
            counters.forEach(counter => {
                const target = parseFloat(counter.innerText);
                const decimalPoints = counter.innerText.includes('.') ? 
                    counter.innerText.split('.')[1].length : 0;
                
                const duration = 1500;
                const frameRate = 1000 / 60;
                const totalFrames = Math.round(duration / frameRate);
                
                let frame = 0;
                
                const animate = () => {
                    frame++;
                    const progress = frame / totalFrames;
                    const currentValue = progress * target;
                    
                    counter.textContent = decimalPoints ? 
                        currentValue.toFixed(decimalPoints) : 
                        Math.floor(currentValue);
                    
                    if (frame < totalFrames) {
                        requestAnimationFrame(animate);
                    } else {
                        counter.textContent = target.toFixed(decimalPoints);
                    }
                };
                
                animate();
            });

            // Cambio visualizzazione (griglia/lista) con transizione fluida
            const viewButtons = document.querySelectorAll('.btn-view');
            const gridView = document.getElementById('grid-view');
            const listView = document.getElementById('list-view');

            viewButtons.forEach(button => {
                button.addEventListener('click', function() {
                    viewButtons.forEach(btn => btn.classList.remove('active'));
                    this.classList.add('active');

                    const viewType = this.getAttribute('data-view');
                    if (viewType === 'grid') {
                        listView.style.opacity = '0';
                        setTimeout(() => {
                            listView.style.display = 'none';
                            gridView.style.display = 'block';
                            setTimeout(() => {
                                gridView.style.opacity = '1';
                            }, 50);
                        }, 300);
                    } else {
                        gridView.style.opacity = '0';
                        setTimeout(() => {
                            gridView.style.display = 'none';
                            listView.style.display = 'block';
                            setTimeout(() => {
                                listView.style.opacity = '1';
                            }, 50);
                        }, 300);
                    }
                });
            });

            // Animazione e funzionalità ricerca
            const searchInput = document.querySelector('.search-input');
            const searchWrapper = document.querySelector('.search-input-wrapper');
            const clearButton = document.querySelector('.btn-clear-search');

            if (searchInput) {
                searchInput.addEventListener('focus', function() {
                    searchWrapper.classList.add('focused');
                });

                searchInput.addEventListener('blur', function() {
                    if (!this.value) {
                        searchWrapper.classList.remove('focused');
                    }
                });
                
                searchInput.addEventListener('input', function() {
                    if (this.value) {
                        clearButton.style.display = 'block';
                    } else {
                        clearButton.style.display = 'none';
                    }
                    
                    // Simulazione filtro (qui inseriresti la vera logica di filtro)
                    const searchTerm = this.value.toLowerCase();
                    const items = document.querySelectorAll('.movie-item, .list-movie-item');
                    
                    items.forEach(item => {
                        const title = item.querySelector('.movie-title a, .list-movie-title a').textContent.toLowerCase();
                        if (title.includes(searchTerm)) {
                            item.style.display = '';
                        } else {
                            item.style.display = 'none';
                        }
                    });
                });
                
                clearButton.addEventListener('click', function() {
                    searchInput.value = '';
                    searchInput.focus();
                    this.style.display = 'none';
                    
                    // Resetta filtro
                    const items = document.querySelectorAll('.movie-item, .list-movie-item');
                    items.forEach(item => {
                        item.style.display = '';
                    });
                });
            }

            // Animazione hero section con particelle
            const heroElement = document.querySelector('.favorites-hero');
            if (heroElement) {
                createParticles();
            }

            function createParticles() {
                const particlesContainer = document.querySelector('.hero-particles');
                const particleCount = 50;

                for (let i = 0; i < particleCount; i++) {
                    const particle = document.createElement('div');
                    particle.classList.add('particle');

                    // Posizione casuale
                    const posX = Math.random() * 100;
                    const posY = Math.random() * 100;

                    // Dimensione casuale
                    const size = Math.random() * 5 + 1;

                    // Velocità casuale
                    const duration = Math.random() * 20 + 10;

                    // Opacity casuale
                    const opacity = Math.random() * 0.5 + 0.1;

                    // Applica stili
                    particle.style.left = `${posX}%`;
                    particle.style.top = `${posY}%`;
                    particle.style.width = `${size}px`;
                    particle.style.height = `${size}px`;
                    particle.style.opacity = opacity;
                    particle.style.animationDuration = `${duration}s`;
                    particle.style.animationDelay = `${Math.random() * 5}s`;

                    particlesContainer.appendChild(particle);
                }
            }

            // Effetti parallax per le forme di background
            const shapes = document.querySelectorAll('.shape');
            document.addEventListener('mousemove', function(e) {
                const x = e.clientX / window.innerWidth;
                const y = e.clientY / window.innerHeight;
                
                shapes.forEach((shape, index) => {
                    const factor = (index + 1) * 10;
                    shape.style.transform = `translate(${x * factor}px, ${y * factor}px)`;
                });
            });

            // Effetto sorting con ordinamento reale degli elementi
            const sortSelect = document.getElementById('sortSelect');
            if (sortSelect) {
                sortSelect.addEventListener('change', function() {
                    const sortType = this.value;
                    const itemsGrid = Array.from(document.querySelectorAll('#grid-view .movie-item'));
                    const itemsList = Array.from(document.querySelectorAll('#list-view .list-movie-item'));
                    
                    const sortItems = (items) => {
                        const container = items[0].parentNode;
                        items.sort((a, b) => {
                            switch(sortType) {
                                case 'rating-desc':
                                    const ratingA = parseFloat(a.querySelector('.movie-rating span, .list-movie-rating span').textContent);
                                    const ratingB = parseFloat(b.querySelector('.movie-rating span, .list-movie-rating span').textContent);
                                    return ratingB - ratingA;
                                case 'title-asc':
                                    const titleA = a.querySelector('.movie-title a, .list-movie-title a').textContent;
                                    const titleB = b.querySelector('.movie-title a, .list-movie-title a').textContent;
                                    return titleA.localeCompare(titleB);
                                case 'year-desc':
                                    const yearA = parseInt(a.querySelector('.movie-year span, .list-movie-year span').textContent) || 0;
                                    const yearB = parseInt(b.querySelector('.movie-year span, .list-movie-year span').textContent) || 0;
                                    return yearB - yearA;
                                default: // date-desc (default)
                                    return 0; // Manterrebbe l'ordine originale
                            }
                        });
                        
                        // Animazione di sorting
                        items.forEach(item => {
                            item.style.opacity = '0';
                            item.style.transform = 'scale(0.8)';
                        });
                        
                        setTimeout(() => {
                            items.forEach(item => container.appendChild(item));
                            
                            setTimeout(() => {
                                items.forEach(item => {
                                    item.style.opacity = '1';
                                    item.style.transform = 'scale(1)';
                                });
                            }, 50);
                        }, 300);
                    };
                    
                    sortItems(itemsGrid);
                    sortItems(itemsList);
                });
            }
            
            // Pulse animation for icons
            function setupPulseAnimation() {
                const pulseIcons = document.querySelectorAll('.pulse-icon');
                pulseIcons.forEach(icon => {
                    icon.classList.add('pulse-animate');
                    setTimeout(() => {
                        icon.classList.remove('pulse-animate');
                    }, 1000);
                    
                    // Repeat animation every 5 seconds
                    setInterval(() => {
                        icon.classList.add('pulse-animate');
                        setTimeout(() => {
                            icon.classList.remove('pulse-animate');
                        }, 1000);
                    }, 5000);
                });
            }
            
            setupPulseAnimation();
        });
    </script>
}

@section Styles {
    <style>
        /* Variables */
        :root {
            --primary-color: #4361ee;
            --primary-hover: #3a56d4;
            --secondary-color: #3f37c9;
            --accent-color: #ff4757;
            --accent-hover: #ff3a4c;
            --text-primary: #212529;
            --text-secondary: #6c757d;
            --text-light: #8f9dad;
            --bg-light: #f8f9fa;
            --bg-lighter: #ffffff;
            --bg-dark: #232931;
            --card-shadow: 0 10px 30px rgba(0, 0, 0, 0.08);
            --card-hover-shadow: 0 20px 40px rgba(0, 0, 0, 0.15);
            --border-radius-card: 20px;
            --border-radius-button: 12px;
            --transition-smooth: all 0.3s cubic-bezier(0.25, 0.8, 0.25, 1);
            --transition-bounce: all 0.5s cubic-bezier(0.2, 0.8, 0.2, 1.2);
        }

        /* Global Styles */
        body {
            overflow-x: hidden;
        }

        .view-mode {
            transition: opacity 0.3s ease;
        }

       
        /* Hero Section */
        .favorites-hero {
            background: linear-gradient(135deg, #3a56d4, #9772fb, #ff7eb3);
            background-size: 300% 300%;
            animation: gradientShift 15s ease infinite;
            color: white;
            padding: 4rem 0;
            margin-bottom: 4rem;
            position: relative;
            overflow: hidden;
            border-radius: 0 0 40px 40px;
            box-shadow: 0 15px 50px rgba(0, 0, 0, 0.2);
            z-index: 1;
        }

        .favorites-hero::before {
            content: "";
            position: absolute;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
            background-image: url("data:image/svg+xml,%3Csvg width='60' height='60' viewBox='0 0 60 60' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath d='M54.627 0l.83.828-1.415 1.415L51.8 0h2.827zM5.373 0l-.83.828L5.96 2.243 8.2 0H5.374zM48.97 0l3.657 3.657-1.414 1.414L46.143 0h2.828zM11.03 0L7.372 3.657 8.787 5.07 13.857 0H11.03zm32.284 0L49.8 6.485 48.384 7.9l-7.9-7.9h2.83zM16.686 0L10.2 6.485 11.616 7.9l7.9-7.9h-2.83zm20.97 0l9.315 9.314-1.414 1.414L34.828 0h2.83zM22.344 0L13.03 9.314l1.414 1.414L25.172 0h-2.83zM32 0l12.142 12.142-1.414 1.414L30 .828 17.272 13.556l-1.414-1.414L28 0h4zM.284 0l28 28-1.414 1.414L0 2.544V0h.284zM0 5.373l25.456 25.455-1.414 1.415L0 8.2V5.374zm0 5.656l22.627 22.627-1.414 1.414L0 13.86v-2.83zm0 5.656l19.8 19.8-1.415 1.413L0 19.514v-2.83zm0 5.657l16.97 16.97-1.414 1.415L0 25.172v-2.83zM0 28l14.142 14.142-1.414 1.414L0 30.828V28zm0 5.657L11.314 44.97 9.9 46.386l-9.9-9.9v-2.828zm0 5.657L8.485 47.8 7.07 49.212 0 42.143v-2.83zm0 5.657l5.657 5.657-1.414 1.415L0 47.8v-2.83zm0 5.657l2.828 2.83-1.414 1.413L0 53.456v-2.83zM54.627 60L30 35.373 5.373 60H8.2L30 38.2 51.8 60h2.827zm-5.656 0L30 41.03 11.03 60h2.828L30 43.858 46.142 60h2.83zm-5.656 0L30 46.686 16.686 60h2.83L30 49.515 40.485 60h2.83zm-5.657 0L30 52.343 22.344 60h2.83L30 55.172 34.828 60h2.83zM32 60l-2-2-2 2h4zM59.716 0l-28 28 1.414 1.414L60 2.544V0h-.284zM60 5.373L34.544 30.828l1.414 1.415L60 8.2V5.374zm0 5.656L37.373 33.656l1.414 1.414L60 13.86v-2.83zm0 5.656l-19.8 19.8 1.415 1.413L60 19.514v-2.83zm0 5.657l-16.97 16.97 1.414 1.415L60 25.172v-2.83zM60 28L45.858 42.142l1.414 1.414L60 30.828V28zm0 5.657L48.686 44.97l1.415 1.415 9.9-9.9v-2.828zm0 5.657L51.515 47.8l1.414 1.413 7.07-7.07v-2.83zm0 5.657l-5.657 5.657 1.414 1.415L60 47.8v-2.83zm0 5.657l-2.828 2.83 1.414 1.413L60 53.456v-2.83zM39.9 16.385l1.414-1.414L30 3.658 18.686 14.97l1.415 1.415 9.9-9.9 9.9 9.9zm-2.83 2.828l1.415-1.414L30 9.313 21.515 17.8l1.414 1.413L30 12.143l7.07 7.07zm-2.827 2.83l1.414-1.416L30 14.97l-5.657 5.657 1.414 1.415L30 17.8l4.243 4.242zm-2.83 2.827l1.415-1.414L30 20.626l-2.828 2.83 1.414 1.414L30 23.456l1.414 1.414zM56.87 59.414L58.284 58 30 29.716 1.716 58l1.414 1.414L30 32.544l26.87 26.87z' fill='%23ffffff' fill-opacity='0.05' fill-rule='evenodd'/%3E%3C/svg%3E");
            z-index: 0;
        }

        /* Decorative shapes */
        .hero-shapes {
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            z-index: 1;
            overflow: hidden;
        }

        .shape {
            position: absolute;
            background: rgba(255, 255, 255, 0.1);
            backdrop-filter: blur(5px);
            border-radius: 50%;
            transition: transform 0.3s ease-out;
        }

        .shape-1 {
            width: 300px;
            height: 300px;
            top: -100px;
            right: -100px;
            background: radial-gradient(circle, rgba(255,255,255,0.1) 0%, rgba(255,255,255,0) 70%);
        }

        .shape-2 {
            width: 200px;
            height: 200px;
            bottom: -50px;
            left: 10%;
            background: radial-gradient(circle, rgba(255,255,255,0.15) 0%, rgba(255,255,255,0) 70%);
        }

        .shape-3 {
            width: 150px;
            height: 150px;
            top: 20%;
            left: 30%;
            background: radial-gradient(circle, rgba(255,255,255,0.1) 0%, rgba(255,255,255,0) 70%);
        }

        /* Particles Animation */
        .hero-particles {
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            overflow: hidden;
            z-index: 1;
        }

        .particle {
            position: absolute;
            background-color: white;
            border-radius: 50%;
            animation: float 20s linear infinite;
            box-shadow: 0 0 10px rgba(255, 255, 255, 0.5);
        }

        .favorites-header {
            position: relative;
            z-index: 2;
            display: flex;
            justify-content: space-between;
            align-items: center;
            flex-wrap: wrap;
            gap: 2rem;
            margin-bottom: 2.5rem;
        }

        .favorites-header h1 {
            font-size: 3rem;
            font-weight: 800;
            margin-bottom: 0.7rem;
            text-shadow: 2px 2px 10px rgba(0, 0, 0, 0.2);
            letter-spacing: -0.5px;
        }

        .favorites-header .lead {
            font-size: 1.25rem;
            font-weight: 400;
            opacity: 0.9;
            text-shadow: 1px 1px 5px rgba(0, 0, 0, 0.2);
            max-width: 600px;
        }

        /* Pulse animation for icons */
        .pulse-icon {
            display: inline-block;
        }

        .pulse-animate {
            animation: pulse 1s ease-in-out;
        }

        /* Statistiche */
        .favorites-stats {
            display: flex;
            flex-wrap: wrap;
            gap: 1.5rem;
            margin-top: 2.5rem;
            position: relative;
            z-index: 2;
        }

        .stat-item {
            background: rgba(255, 255, 255, 0.15);
            backdrop-filter: blur(10px);
            padding: 1.5rem 1.7rem;
            border-radius: 20px;
            flex: 1;
            min-width: 200px;
            display: flex;
            align-items: center;
            gap: 1.2rem;
            transition: var(--transition-bounce);
            border: 1px solid rgba(255, 255, 255, 0.2);
            position: relative;
            overflow: hidden;
            box-shadow: 0 15px 30px rgba(0, 0, 0, 0.1);
            transform: perspective(1000px) rotateX(0deg);
        }

        .stat-item:hover, .stat-hover {
            background: rgba(255, 255, 255, 0.25);
            transform: perspective(1000px) rotateX(5deg) translateY(-8px);
            box-shadow: 0 20px 40px rgba(0, 0, 0, 0.2);
            border-color: rgba(255, 255, 255, 0.3);
        }

        .stat-backdrop {
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: radial-gradient(circle at center, rgba(255,255,255,0.2) 0%, rgba(255,255,255,0) 70%);
            opacity: 0;
            transition: opacity 0.5s ease;
            z-index: 0;
        }

        .stat-item:hover .stat-backdrop {
            opacity: 1;
        }

        .stat-icon {
            width: 60px;
            height: 60px;
            background: rgba(255, 255, 255, 0.25);
            border-radius: 50%;
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 1.7rem;
            box-shadow: 0 10px 20px rgba(0, 0, 0, 0.1);
            position: relative;
            z-index: 1;
            transition: var(--transition-smooth);
        }

        .stat-item:hover .stat-icon {
            background: rgba(255, 255, 255, 0.35);
            transform: scale(1.1);
        }

        .stat-content {
            position: relative;
            z-index: 1;
        }

        .stat-value {
            font-size: 2.4rem;
            font-weight: 700;
            margin-bottom: 0.2rem;
            color: white;
            line-height: 1;
            text-shadow: 1px 1px 5px rgba(0, 0, 0, 0.15);
        }

        .stat-label {
            font-size: 1rem;
            color: rgba(255, 255, 255, 0.8);
            font-weight: 500;
        }

        /* Filters Container */
        .filters-container {
            margin-bottom: 2rem;
        }

        /* Filters Bar */
        .filters-bar {
            display: flex;
            align-items: center;
            justify-content: space-between;
            background: var(--bg-lighter);
            padding: 1.2rem 1.8rem;
            border-radius: var(--border-radius-card);
            margin-bottom: 1.5rem;
            box-shadow: 0 10px 30px rgba(0, 0, 0, 0.05);
        }

        /* Results indicator */
        .results-indicator {
            display: flex;
            align-items: center;
            justify-content: space-between;
            margin-bottom: 1.5rem;
            color: var(--text-secondary);
            font-size: 0.95rem;
        }

        .results-count {
            font-weight: 500;
        }

        .view-toggle {
            display: flex;
            gap: 0.7rem;
        }

        .btn-view {
            background: var(--bg-light);
            border: none;
            width: 45px;
            height: 45px;
            border-radius: 12px;
            display: flex;
            align-items: center;
            justify-content: center;
            color: var(--text-secondary);
            cursor: pointer;
            transition: var(--transition-smooth);
            font-size: 1.1rem;
        }

        .btn-view.active {
            background: var(--primary-color);
            color: white;
            box-shadow: 0 8px 15px rgba(67, 97, 238, 0.2);
        }

        .btn-view:hover:not(.active) {
            background: #e9ecef;
            color: var(--text-primary);
            transform: translateY(-3px);
        }

        .search-favorites {
            flex-grow: 1;
            max-width: 450px;
            margin: 0 1.5rem;
        }

        .search-input-wrapper {
            position: relative;
            transition: var(--transition-smooth);
        }

        .search-input-wrapper.focused {
            transform: translateY(-3px);
        }

        .search-icon {
            position: absolute;
            left: 18px;
            top: 50%;
            transform: translateY(-50%);
            color: var(--text-secondary);
            font-size: 1rem;
            transition: var(--transition-smooth);
        }

        .search-input-wrapper.focused .search-icon {
            color: var(--primary-color);
        }

        .search-input {
            padding: 0.8rem 1.5rem 0.8rem 3rem;
            height: 50px;
            border-radius: 25px;
            border: 2px solid #e9ecef;
            transition: var(--transition-smooth);
            font-size: 1rem;
        }

        .search-input:focus {
            box-shadow: 0 10px 25px rgba(67, 97, 238, 0.15);
            border-color: var(--primary-color);
        }

        .btn-clear-search {
            position: absolute;
            right: 15px;
            top: 50%;
            transform: translateY(-50%);
            background: none;
            border: none;
            color: var(--text-secondary);
            cursor: pointer;
            display: none;
            padding: 0;
            font-size: 1.1rem;
            transition: var(--transition-smooth);
        }

        .btn-clear-search:hover {
            color: var(--accent-color);
            transform: translateY(-50%) scale(1.1);
        }

        .sort-dropdown {
            display: flex;
            align-items: center;
            gap: 0.8rem;
        }

        .sort-label {
            color: var(--text-secondary);
            font-weight: 500;
            margin-bottom: 0;
            font-size: 0.95rem;
        }

        .sort-select {
            height: 45px;
            border-radius: 12px;
            border: 2px solid #e9ecef;
            padding: 0 1rem;
            cursor: pointer;
            transition: var(--transition-smooth);
            font-weight: 500;
            min-width: 180px;
            font-size: 0.95rem;
        }

        .sort-select:focus {
            box-shadow: 0 10px 25px rgba(67, 97, 238, 0.15);
            border-color: var(--primary-color);
        }

        /* Cards */
        .movie-card {
            background-color: var(--bg-lighter);
            border-radius: var(--border-radius-card);
            overflow: visible;
            box-shadow: var(--card-shadow);
            transition: var(--transition-bounce);
            height: 100%;
            position: relative;
            border: 1px solid rgba(0, 0, 0, 0.05);
        }

        .movie-card:hover {
            transform: translateY(-15px);
            box-shadow: var(--card-hover-shadow);
        }

        .movie-poster-wrapper {
            position: relative;
            margin: 12px 12px 0;
            border-radius: calc(var(--border-radius-card) - 5px);
            overflow: hidden;
            box-shadow: 0 10px 20px rgba(0, 0, 0, 0.1);
            transition: var(--transition-smooth);
        }

        .movie-card:hover .movie-poster-wrapper {
            box-shadow: 0 15px 30px rgba(0, 0, 0, 0.2);
        }

        .movie-poster {
            position: relative;
            aspect-ratio: 2/3;
            background-color: #f8f9fa;
            overflow: hidden;
        }

        .movie-poster img,
        .movie-poster .no-poster {
            width: 100%;
            height: 100%;
            object-fit: cover;
            transition: transform 0.7s ease;
        }

        .movie-card:hover .movie-poster img {
            transform: scale(1.08);
        }

        .no-poster {
            display: flex;
            flex-direction: column;
            align-items: center;
            justify-content: center;
            background-color: #e9ecef;
            color: #adb5bd;
        }

        .no-poster i {
            font-size: 3rem;
            margin-bottom: 0.7rem;
        }

        .no-poster span {
            font-size: 0.95rem;
            font-weight: 500;
            margin-top: 0.5rem;
        }

        .movie-rating {
            position: absolute;
            top: 12px;
            right: 12px;
            background: rgba(0, 0, 0, 0.7);
            color: #ffc107;
            padding: 0.4rem 0.7rem;
            border-radius: 20px;
            font-size: 0.9rem;
            font-weight: 600;
            z-index: 2;
            backdrop-filter: blur(5px);
            box-shadow: 0 5px 15px rgba(0, 0, 0, 0.15);
            transition: var(--transition-bounce);
            border: 1px solid rgba(255, 255, 255, 0.1);
        }

        .movie-card:hover .movie-rating {
            background: rgba(0, 0, 0, 0.8);
            transform: scale(1.1);
            box-shadow: 0 8px 20px rgba(0, 0, 0, 0.2);
        }

        .movie-actions {
            position: absolute;
            top: 12px;
            left: 12px;
            z-index: 2;
        }

        .btn-remove-favorite {
            background: rgba(255, 255, 255, 0.15);
            border: none;
            color: var(--accent-color);
            width: 45px;
            height: 45px;
            border-radius: 50%;
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 1.2rem;
            transition: var(--transition-bounce);
            backdrop-filter: blur(5px);
            position: relative;
            cursor: pointer;
            box-shadow: 0 5px 15px rgba(0, 0, 0, 0.1);
            border: 1px solid rgba(255, 255, 255, 0.1);
        }

        .btn-remove-favorite:hover {
            background: var(--accent-color);
            color: white;
            transform: scale(1.15);
            box-shadow: 0 8px 20px rgba(255, 71, 87, 0.3);
        }

        .btn-tooltip {
            position: absolute;
            bottom: -35px;
            left: 50%;
            transform: translateX(-50%);
            background: rgba(0, 0, 0, 0.8);
            color: white;
            padding: 0.4rem 0.8rem;
            border-radius: 5px;
            font-size: 0.8rem;
            white-space: nowrap;
            opacity: 0;
            visibility: hidden;
            transition: all 0.3s ease;
        }

        .btn-tooltip::before {
            content: '';
            position: absolute;
            top: -5px;
            left: 50%;
            transform: translateX(-50%);
            border-left: 6px solid transparent;
            border-right: 6px solid transparent;
            border-bottom: 6px solid rgba(0, 0, 0, 0.8);
        }

        .btn-remove-favorite:hover .btn-tooltip {
            opacity: 1;
            visibility: visible;
            bottom: -40px;
        }

        .recently-added {
            position: absolute;
            top: 12px;
            left: 65px;
            background: rgba(0, 0, 0, 0.7);
            color: #2ecc71;
            width: 45px;
            height: 45px;
            border-radius: 50%;
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 1.1rem;
            z-index: 2;
            backdrop-filter: blur(5px);
            box-shadow: 0 5px 15px rgba(0, 0, 0, 0.1);
            transition: var(--transition-bounce);
            border: 1px solid rgba(255, 255, 255, 0.1);
            overflow: hidden;
        }

        .movie-card:hover .recently-added {
            transform: scale(1.1);
            box-shadow: 0 8px 20px rgba(0, 0, 0, 0.2);
        }

        .recent-tooltip {
            position: absolute;
            font-size: 0.7rem;
            background: #2ecc71;
            color: white;
            padding: 1px 5px;
            border-radius: 3px;
            top: -20px;
            transition: all 0.3s ease;
            opacity: 0;
            font-weight: 600;
        }

        .recently-added:hover .recent-tooltip {
            top: -5px;
            opacity: 1;
        }

        /* Movie Overlay */
        .movie-overlay {
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: rgba(0, 0, 0, 0.7);
            backdrop-filter: blur(3px);
            display: flex;
            flex-direction: column;
            justify-content: center;
            align-items: center;
            opacity: 0;
            transition: opacity 0.4s ease;
            z-index: 1;
            border-radius: calc(var(--border-radius-card) - 5px);
        }

        .movie-card:hover .movie-overlay {
            opacity: 1;
        }

        .overlay-options {
            display: flex;
            flex-direction: column;
            gap: 1rem;
            margin-bottom: 1.5rem;
        }

        .btn-movie-action {
            background: rgba(255, 255, 255, 0.15);
            color: white;
            padding: 0.6rem 1.4rem;
            border-radius: var(--border-radius-button);
            font-size: 0.95rem;
            text-decoration: none;
            transition: var(--transition-bounce);
            backdrop-filter: blur(5px);
            display: flex;
            align-items: center;
            justify-content: center;
            gap: 0.5rem;
            border: 1px solid rgba(255, 255, 255, 0.1);
            font-weight: 500;
            min-width: 130px;
        }

        .btn-details {
            background-color: rgba(67, 97, 238, 0.6);
        }

        .btn-trailer {
            background-color: rgba(255, 71, 87, 0.6);
        }

        .btn-movie-action:hover {
            transform: translateY(-5px) scale(1.05);
            color: white;
            box-shadow: 0 10px 20px rgba(0, 0, 0, 0.2);
        }

        .btn-details:hover {
            background-color: rgba(67, 97, 238, 0.8);
        }

        .btn-trailer:hover {
            background-color: rgba(255, 71, 87, 0.8);
        }

        .movie-genres-overlay {
            display: flex;
            flex-wrap: wrap;
            justify-content: center;
            gap: 0.5rem;
            padding: 0 1rem;
        }

        .genre-badge {
            background: rgba(255, 255, 255, 0.15);
            color: white;
            padding: 0.3rem 0.8rem;
            border-radius: 20px;
            font-size: 0.8rem;
            backdrop-filter: blur(5px);
            border: 1px solid rgba(255, 255, 255, 0.1);
            transition: all 0.3s ease;
        }

        .genre-badge:hover {
            background: rgba(255, 255, 255, 0.3);
            transform: translateY(-3px);
            box-shadow: 0 5px 10px rgba(0, 0, 0, 0.1);
        }

        /* Movie Info */
        .movie-info {
            padding: 1.5rem;
        }

        .movie-title {
            font-size: 1.15rem;
            font-weight: 700;
            margin-bottom: 1rem;
            overflow: hidden;
            text-overflow: ellipsis;
            white-space: nowrap;
            letter-spacing: -0.2px;
        }

        .movie-title a {
            color: var(--text-primary);
            text-decoration: none;
            transition: color 0.3s;
        }

        .movie-title a:hover {
            color: var(--primary-color);
        }

        .movie-meta {
            display: flex;
            justify-content: space-between;
            align-items: center;
            font-size: 0.9rem;
            color: var(--text-secondary);
        }

        .movie-year {
            display: flex;
            align-items: center;
            gap: 0.4rem;
            font-weight: 500;
        }

        .movie-badges {
            display: flex;
            gap: 0.6rem;
        }

        .verified-badge {
            color: var(--primary-color);
            display: flex;
            align-items: center;
            transition: transform 0.3s ease;
        }

        .verified-badge:hover {
            transform: scale(1.2);
        }

        .date-added {
            color: var(--text-secondary);
            display: flex;
            align-items: center;
            transition: transform 0.3s ease;
        }

        .date-added:hover {
            transform: scale(1.2);
        }

        /* List View Styles */
        .list-movies {
            display: flex;
            flex-direction: column;
            gap: 1.2rem;
        }

        /* List View Styles (continuazione) */
        .list-movie-item {
            background: var(--bg-lighter);
            border-radius: var(--border-radius-card);
            box-shadow: var(--card-shadow);
            display: flex;
            overflow: hidden;
            transition: var(--transition-bounce);
            border: 1px solid rgba(0, 0, 0, 0.05);
            position: relative;
        }

            .list-movie-item:hover {
                transform: translateY(-8px);
                box-shadow: var(--card-hover-shadow);
            }

        .list-movie-poster {
            width: 140px;
            height: 200px;
            flex-shrink: 0;
            position: relative;
            overflow: hidden;
            border-radius: 0 0 0 var(--border-radius-card);
        }

            .list-movie-poster img {
                width: 100%;
                height: 100%;
                object-fit: cover;
                transition: transform 0.7s ease;
            }

        .list-movie-item:hover .list-movie-poster img {
            transform: scale(1.08);
        }

        .no-poster-list {
            display: flex;
            align-items: center;
            justify-content: center;
            width: 100%;
            height: 100%;
            background: #e9ecef;
            color: #adb5bd;
        }

            .no-poster-list i {
                font-size: 2.5rem;
            }

        .list-badge-new {
            position: absolute;
            top: 10px;
            right: 10px;
            background: #2ecc71;
            color: white;
            padding: 0.25rem 0.7rem;
            border-radius: 20px;
            font-size: 0.8rem;
            font-weight: 600;
            box-shadow: 0 5px 10px rgba(46, 204, 113, 0.3);
            z-index: 1;
        }

        .list-movie-content {
            padding: 1.5rem;
            flex-grow: 1;
            display: flex;
            flex-direction: column;
            justify-content: space-between;
        }

        .list-movie-header {
            display: flex;
            justify-content: space-between;
            align-items: flex-start;
            margin-bottom: 1.2rem;
        }

        .list-movie-title {
            font-size: 1.4rem;
            font-weight: 700;
            margin: 0;
            display: flex;
            align-items: center;
            gap: 0.5rem;
        }

            .list-movie-title a {
                color: var(--text-primary);
                text-decoration: none;
                transition: color 0.3s;
            }

                .list-movie-title a:hover {
                    color: var(--primary-color);
                }

        .list-verified-badge {
            color: var(--primary-color);
            font-size: 1rem;
            display: inline-flex;
            align-items: center;
            transition: transform 0.3s ease;
        }

            .list-verified-badge:hover {
                transform: scale(1.2);
            }

        .list-movie-rating {
            background: #fff8e1;
            color: #ff9800;
            padding: 0.4rem 0.8rem;
            border-radius: 20px;
            font-size: 1rem;
            font-weight: 600;
            display: flex;
            align-items: center;
            gap: 0.4rem;
            margin-left: 1rem;
            box-shadow: 0 5px 10px rgba(255, 152, 0, 0.15);
            transition: transform 0.3s ease;
        }

            .list-movie-rating:hover {
                transform: scale(1.05);
            }

        .list-movie-details {
            display: flex;
            flex-wrap: wrap;
            gap: 1.2rem;
            color: var(--text-secondary);
            font-size: 0.95rem;
            align-items: center;
        }

        .list-movie-year, .list-movie-date {
            display: flex;
            align-items: center;
            gap: 0.4rem;
            font-weight: 500;
        }

        .list-movie-genres {
            display: flex;
            flex-wrap: wrap;
            gap: 0.5rem;
        }

        .list-genre-badge {
            background: #f1f3f5;
            color: var(--text-secondary);
            padding: 0.3rem 0.8rem;
            border-radius: 20px;
            font-size: 0.85rem;
            transition: all 0.3s ease;
            font-weight: 500;
        }

            .list-genre-badge:hover {
                background: #e2e6ea;
                transform: translateY(-3px);
                box-shadow: 0 5px 10px rgba(0, 0, 0, 0.05);
            }

        .list-movie-actions {
            width: 180px;
            flex-shrink: 0;
            background: #f8f9fa;
            display: flex;
            flex-direction: column;
            justify-content: center;
            gap: 0.9rem;
            padding: 1.5rem;
            border-left: 1px solid #e9ecef;
            transition: background 0.3s ease;
        }

        .list-movie-item:hover .list-movie-actions {
            background: #f1f3f5;
        }

        .btn-list-action {
            padding: 0.7rem;
            border-radius: var(--border-radius-button);
            display: flex;
            align-items: center;
            justify-content: center;
            gap: 0.5rem;
            text-decoration: none;
            transition: var(--transition-bounce);
            font-size: 0.95rem;
            border: none;
            cursor: pointer;
            font-weight: 500;
        }

            .btn-list-action.details {
                background: var(--primary-color);
                color: white;
            }

            .btn-list-action.trailer {
                background: #e9ecef;
                color: var(--text-primary);
            }

            .btn-list-action.remove {
                background: #fff5f5;
                color: var(--accent-color);
            }

            .btn-list-action:hover {
                transform: translateY(-5px);
                box-shadow: 0 8px 15px rgba(0, 0, 0, 0.1);
            }

            .btn-list-action.details:hover {
                background: var(--primary-hover);
                box-shadow: 0 8px 15px rgba(67, 97, 238, 0.2);
            }

            .btn-list-action.trailer:hover {
                background: #dee2e6;
            }

            .btn-list-action.remove:hover {
                background: #ffe3e3;
                box-shadow: 0 8px 15px rgba(255, 71, 87, 0.15);
            }

        /* Pagination */
        .pagination-container {
            margin-top: 4rem;
            padding-top: 2rem;
            border-top: 1px solid #f1f3f5;
        }

        .pagination .page-item .page-link {
            border-radius: 50%;
            margin: 0 0.3rem;
            width: 45px;
            height: 45px;
            display: flex;
            align-items: center;
            justify-content: center;
            color: var(--primary-color);
            border: 2px solid #e9ecef;
            transition: var(--transition-bounce);
            font-weight: 600;
            font-size: 1rem;
        }

        .pagination .page-item.active .page-link {
            background-color: var(--primary-color);
            border-color: var(--primary-color);
            color: white;
            box-shadow: 0 8px 20px rgba(67, 97, 238, 0.3);
        }

        .pagination .page-item:not(.active) .page-link:hover {
            background-color: #e9ecef;
            color: var(--primary-color);
            transform: translateY(-5px);
            box-shadow: 0 8px 15px rgba(0, 0, 0, 0.1);
        }

        .page-info {
            margin-top: 1.5rem;
            font-size: 1rem;
            color: var(--text-secondary);
        }

        .current-page, .total-pages {
            font-weight: 700;
            color: var(--text-primary);
        }

        /* Empty State */
        .empty-state {
            text-align: center;
            padding: 5rem 2rem;
            max-width: 900px;
            margin: 0 auto;
            background-color: white;
            border-radius: var(--border-radius-card);
            box-shadow: 0 15px 40px rgba(0, 0, 0, 0.05);
            position: relative;
            overflow: hidden;
        }

        .empty-icon-container {
            display: flex;
            justify-content: center;
            margin-bottom: 2.5rem;
            position: relative;
        }

        .empty-icon {
            width: 140px;
            height: 140px;
            background: linear-gradient(135deg, #f8f9fa 0%, #e9ecef 100%);
            border-radius: 50%;
            display: flex;
            align-items: center;
            justify-content: center;
            color: #6c757d;
            font-size: 3.5rem;
            box-shadow: 0 15px 30px rgba(0, 0, 0, 0.1);
            position: relative;
            transition: var(--transition-bounce);
            z-index: 2;
        }

            .empty-icon:hover {
                transform: scale(1.1) rotate(10deg);
                box-shadow: 0 20px 40px rgba(0, 0, 0, 0.15);
                color: var(--accent-color);
            }

            .empty-icon::before {
                content: '';
                position: absolute;
                top: -10px;
                left: -10px;
                right: -10px;
                bottom: -10px;
                border: 3px dashed #e9ecef;
                border-radius: 50%;
                animation: spin 30s linear infinite;
            }

        /* Decorative elements for empty state */
        .empty-decoration {
            position: absolute;
            width: 100%;
            height: 100%;
            z-index: 1;
        }

        .decoration-item {
            position: absolute;
            border-radius: 50%;
            background: linear-gradient(135deg, rgba(67, 97, 238, 0.1), rgba(255, 71, 87, 0.1));
        }

        .d1 {
            width: 40px;
            height: 40px;
            top: 20px;
            left: 30%;
            animation: float 20s ease-in-out infinite;
        }

        .d2 {
            width: 60px;
            height: 60px;
            bottom: 10px;
            right: 35%;
            animation: float 25s ease-in-out infinite reverse;
        }

        .d3 {
            width: 25px;
            height: 25px;
            top: 50%;
            right: 30%;
            animation: float 15s ease-in-out infinite 5s;
        }

        .empty-state h2 {
            font-size: 2.2rem;
            font-weight: 700;
            margin-bottom: 1.2rem;
            color: var(--text-primary);
        }

        .empty-state p {
            font-size: 1.15rem;
            color: var(--text-secondary);
            max-width: 550px;
            margin: 0 auto 2.5rem;
            line-height: 1.6;
        }

        .empty-actions .btn {
            padding: 0.8rem 2rem;
            font-size: 1.1rem;
            border-radius: var(--border-radius-button);
            font-weight: 500;
            box-shadow: 0 10px 25px rgba(67, 97, 238, 0.25);
            transition: var(--transition-bounce);
        }

            .empty-actions .btn:hover {
                transform: translateY(-5px);
                box-shadow: 0 15px 30px rgba(67, 97, 238, 0.35);
            }

        .empty-tips {
            margin-top: 4rem;
            padding-top: 3rem;
            border-top: 1px dashed #e9ecef;
        }

            .empty-tips h5 {
                font-size: 1.3rem;
                font-weight: 600;
                margin-bottom: 2rem;
                color: var(--text-primary);
            }

        .tips-container {
            display: flex;
            flex-wrap: wrap;
            justify-content: center;
            gap: 2rem;
        }

        .tip-card {
            background: #f8f9fa;
            border-radius: var(--border-radius-card);
            padding: 1.5rem;
            display: flex;
            align-items: flex-start;
            gap: 1.2rem;
            flex: 1;
            min-width: 250px;
            max-width: 350px;
            box-shadow: 0 10px 20px rgba(0, 0, 0, 0.05);
            transition: var(--transition-smooth);
            border: 1px solid rgba(0, 0, 0, 0.03);
        }

            .tip-card:hover {
                transform: translateY(-8px);
                box-shadow: 0 15px 30px rgba(0, 0, 0, 0.1);
                background: white;
            }

        .tip-icon {
            width: 60px;
            height: 60px;
            background: var(--primary-color);
            border-radius: 50%;
            display: flex;
            align-items: center;
            justify-content: center;
            color: white;
            font-size: 1.5rem;
            flex-shrink: 0;
            box-shadow: 0 8px 15px rgba(67, 97, 238, 0.2);
            transition: var(--transition-smooth);
        }

        .tip-card:hover .tip-icon {
            transform: scale(1.1);
        }

        .tip-content h6 {
            font-size: 1.1rem;
            font-weight: 600;
            margin-bottom: 0.8rem;
            color: var(--text-primary);
        }

        .tip-content p {
            font-size: 0.95rem;
            color: var(--text-secondary);
            margin: 0;
            line-height: 1.5;
        }
    </style>
}